<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>月下对饮</title>
  
  <subtitle>welcome!</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-10-30T11:18:34.080Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>独酌</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://example.com/2022/10/30/typora%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    <id>http://example.com/2022/10/30/typora%E5%BF%AB%E6%8D%B7%E9%94%AE/</id>
    <published>2022-10-30T11:03:28.357Z</published>
    <updated>2022-10-30T11:18:34.080Z</updated>
    
    <content type="html"><![CDATA[<p>基本功能快捷键<br>字体操作快捷键<br>功能快捷键<br>字体加粗Ctrl+B<br>下划线Ctrl+U<br>倾斜Ctrl+I<br>删除线Alt+Shift+5</p><p>插入功能快键键</p><p>功能快键键</p><p>插入图片(本地图片可直接拖入)Ctrl+Shift+I</p><p>插入表格Ctrl+T</p><p>插入有序列表Ctrl+Shift+[</p><p>插入无序列表Ctrl+Shift+]</p><p>插入超链接Ctrl+K</p><p>插入代码片Ctrl+Shift+&#96;</p><p>插入代码块Ctrl+Shift+K</p><p>插入公式块Ctrl+Shift+M</p><p>插入引用块Ctrl+Shift+Q</p><p>标题段落快捷键</p><p>MarkDown支持六级标题，可以使用Ctrl+数字 指定不同层次的标题和段落</p><p>功能快捷键<br>段落（正文）Ctrl+0<br>一级标题Ctrl+1<br>二级标题Ctrl+2<br>三–六级标题(以此类推)Ctrl+3–6<br>提升标题级别Ctrl+‘+’<br>降低标题级别Ctrl+‘-’<br>拓展操作快键键<br>表格扩展快捷键<br>在表格中，可以使用鼠标拖动行或者列，达到交换行和列的目的</p><p>同时也可以使用快捷键操作</p><p>功能快捷键<br>下方插入行Ctrl+Enter<br>上移该行Alt+↑<br>下移该行Alt+↓<br>左移该列Win键+←<br>右移该列Win键+→<br>删除该行Ctrl+Shift+退格键(BackSpace)<br>左右移动表格列的快捷键与WinDows系统自带的快捷键冲突，导致失效</p><p>删除行快捷键，不知道为什么没有生效</p><p>视图操作快捷键<br>侧边栏<br>功能快捷键<br>大纲视图Ctrl+Shift+1<br>文件列表视图Ctrl+Shift+2<br>文件树视图<br>显示&#x2F;隐藏侧边栏<br>放大视图Ctrl+Shift+‘+’<br>缩小视图Ctrl+Shift+‘-’<br>恢复原来大小视图Ctrl+Shift+9<br>编辑模式<br>功能快捷键<br>源代码模式Ctrl+&#x2F;<br>专注模式(当前编辑行为黑，其他行为灰色)F8<br>打字机模式(光标始终在屏幕中央位置)F9<br>其他<br>功能快捷键<br>全屏F11<br>应用内窗口切换Ctrl+Tab<br>开发者工具Shift+F12<br>搜索扩展快捷键<br>功能快捷键<br>查找&#x2F;搜索Ctrl+F(好像是Ctrl+Shift+F，但这个无效)<br>替换Ctrl+H<br>查找下一个F3<br>查找上一个Shift+F3<br>基本操作快键键<br>选择操作<br>功能快捷键<br>全选Ctrl+A<br>选择当前行&#x2F;句Ctrl+L<br>选择当前格式文本^ 注解1Ctrl+E<br>选择当前单词^ 注解2Ctrl+D<br>删除当前单词Ctrl+Shift+D<br>跳转操作<br>功能快捷键<br>跳转到文首Ctrl+Home<br>跳转到所选内容Ctrl+J<br>跳转到文末Ctrl+End<br>粘贴复制操作<br>功能快捷键<br>普通复制Ctrl+C<br>普通粘贴Ctrl+V<br>剪切Ctrl+X<br>复制为MarkDown标记语法Ctrl+Shift+C<br>粘贴为纯文本Ctrl+Shift+V<br>文件操作<br>功能快捷键<br>新建Ctrl+N<br>新建窗口(在Windows中，这两个作用一样)Ctrl+Shift+N<br>打开文件Ctrl+O<br>快速打开(在最近打开中打开)Ctrl+P<br>保存Ctrl+S<br>另存为Ctrl+Shift+S<br>偏好设置Ctrl+，<br>关闭Ctrl+W<br>重新打开关闭的文件Ctrl+Shift+T<br>其他<br>功能快捷键<br>清楚样式Ctrl+<br>增加缩进Ctrl+]<br>减少缩进Ctrl+[</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;基本功能快捷键&lt;br&gt;字体操作快捷键&lt;br&gt;功能	快捷键&lt;br&gt;字体加粗	Ctrl+B&lt;br&gt;下划线	Ctrl+U&lt;br&gt;倾斜	Ctrl+I&lt;br&gt;删除线	Alt+Shift+5&lt;/p&gt;
&lt;p&gt;插入功能快键键&lt;/p&gt;
&lt;p&gt;功能	快键键&lt;/p&gt;
&lt;p&gt;插入图片(本地图片可直</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2022/10/30/python%E6%A8%A1%E5%9D%97/"/>
    <id>http://example.com/2022/10/30/python%E6%A8%A1%E5%9D%97/</id>
    <published>2022-10-30T09:28:28.640Z</published>
    <updated>2022-10-30T12:17:38.321Z</updated>
    
    <content type="html"><![CDATA[<h1 id="python模块"><a href="#python模块" class="headerlink" title="python模块"></a>python模块</h1><h2 id="模块1-turtle库"><a href="#模块1-turtle库" class="headerlink" title="模块1 turtle库"></a>模块1 turtle库</h2><h3 id="库的引用"><a href="#库的引用" class="headerlink" title="库的引用"></a>库的引用</h3><p>import&lt;库名&gt;</p><ul><li><p>form &lt;库名&gt;import&lt;函数名&gt;</p></li><li><p>&lt;库名&gt;.&lt;函数名&gt;(&lt;函数参数&gt;)</p></li><li><p>form &lt;库名&gt;import*</p><ul><li>函数名（函数参数）</li></ul></li><li><p>import&lt;库名&gt;as&lt;库别名&gt;</p><ul><li>&lt;库别名&gt;.&lt;函数名&gt;(&lt;函数参数&gt;)</li></ul></li></ul><h3 id="画笔控制函数"><a href="#画笔控制函数" class="headerlink" title="画笔控制函数"></a>画笔控制函数</h3><ul><li><p>turtle.penup()别名turtle.pu()</p><ul><li>抬起画笔，海龟在飞行</li></ul></li><li><p>turtle.pendown()别名turtle.pd()</p><ul><li>落下画笔，海龟在爬行</li></ul></li><li><p>turtle.pensize(width)别名turtle.width(width)</p><ul><li>画笔密度，海龟的腰围</li></ul></li><li><p>turtle.pencolor(color) color为颜色字符串或rgb值</p><ul><li>画笔颜色，海龟在涂装<ul><li>颜色字符串：turtle.pencolor(“purple”)</li><li>RGB的小数值：turtle.pencolor(0.63,0.13,0.94)</li><li>RGB的元组值：turtle.pencolor((0.63,0.13,0.94))</li></ul></li></ul></li></ul><h3 id="运动控制函数"><a href="#运动控制函数" class="headerlink" title="运动控制函数"></a>运动控制函数</h3><ul><li><p>turtle.forward(d)别名turtle.fd(d)</p><ul><li>向前行进，海龟走直线<ul><li>d：行进距离，可以为负数</li></ul></li></ul></li><li><p>turtle.circle(r,extent&#x3D;None)</p><ul><li>根据半径r绘制extent角度的弧形</li><li>r:默认圆心在海龟左侧r距离的位置</li><li>extent：绘制角度，默认是360度整圆</li></ul></li></ul><h3 id="方向控制函数"><a href="#方向控制函数" class="headerlink" title="方向控制函数"></a>方向控制函数</h3><ul><li><p>turtle.setheading(angle)别名turtle.seth(angle)</p><ul><li><p>改变行进方向，海龟走角度</p></li><li><p>angle：改变行进方向，海龟走角度</p></li></ul></li><li><p>turtle.left(angle)</p></li><li><p>turtle.right(angle)</p></li></ul><h3 id="循环语句和range-函数"><a href="#循环语句和range-函数" class="headerlink" title="循环语句和range()函数"></a>循环语句和range()函数</h3><ul><li><p>for&lt;变量&gt;in range(&lt;参数&gt;)</p><ul><li>&lt;被循环执行的语句&gt;</li></ul></li><li><p>&lt;变量&gt;表示每次循环的计数，0到&lt;次数&gt;-1</p></li></ul><p>for i in range(5)</p><p>​print(“Hello”,i)</p><blockquote><p>Hello: 0</p><p>Hello: 1</p><p>Hello: 2</p><p>Hello: 3</p><p>Hello: 4</p></blockquote><p>输出结果会有一个空格</p><ul><li>range()函数:产生循环计数序列</li><li>range(N)<ul><li>产生0到N-1的整数序列，共N个</li></ul></li><li>range(M,N)<ul><li>产生M到N-1的整数序列，共N-M个</li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;python模块&quot;&gt;&lt;a href=&quot;#python模块&quot; class=&quot;headerlink&quot; title=&quot;python模块&quot;&gt;&lt;/a&gt;python模块&lt;/h1&gt;&lt;h2 id=&quot;模块1-turtle库&quot;&gt;&lt;a href=&quot;#模块1-turtle库&quot; class</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2022/10/30/python%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    <id>http://example.com/2022/10/30/python%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE/</id>
    <published>2022-10-30T08:27:14.522Z</published>
    <updated>2022-10-30T08:32:57.343Z</updated>
    
    <content type="html"><![CDATA[<h1 id="python常用快捷键"><a href="#python常用快捷键" class="headerlink" title="python常用快捷键"></a>python常用快捷键</h1><h2 id="最重要的快捷键"><a href="#最重要的快捷键" class="headerlink" title="最重要的快捷键"></a><strong>最重要的快捷键</strong></h2><ol><li>ctrl+shift+A:万能命令行</li><li>shift两次:查看资源文件</li></ol><h2 id="新建工程第一步操作"><a href="#新建工程第一步操作" class="headerlink" title="新建工程第一步操作"></a><strong>新建工程第一步操作</strong></h2><ol><li>module设置把空包分层去掉,compact empty middle package</li><li>设置当前的工程是utf-8,设置的Editor–&gt;File Encodings–&gt;全部改成utf-8,</li></ol><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a><strong>注释</strong></h2><ol><li>ctrl+&#x2F;:单行注释</li></ol><h2 id="光标操作"><a href="#光标操作" class="headerlink" title="光标操作"></a><strong>光标操作</strong></h2><ol><li>ctrl+alt+enter:向上插入</li><li>shift+enter:向下插入</li><li>end:光标</li></ol><h2 id="操作代码"><a href="#操作代码" class="headerlink" title="操作代码"></a><strong>操作代码</strong></h2><ol><li>ctrl+d:复制粘贴一行</li><li>ctrl+y:删除一行</li><li>shift+F6:重命令</li><li>ctrl+O:复写代码</li></ol><h2 id="格式代码及其他功能"><a href="#格式代码及其他功能" class="headerlink" title="格式代码及其他功能"></a><strong>格式代码及其他功能</strong></h2><ol><li>ctrl+alt+L:格式代码</li><li>在代码中使用alt+insert:Generate,可以get&#x2F;set等操作</li><li>ctrl+alt+T:添加try&#x2F;catch</li><li>ctrl+alt+M:抽取代码</li><li>ctrl+alt+F:变量抽取全局变量</li><li>ctrl+alt+v:方法体内值抽取成变量</li><li>保存成模板:ctrl+shift+L,这个是自定义的(save as live Template)</li><li>选中内容:tab进行退格</li><li>shift+tab:反向退格</li><li>alt+shift+上下键:选中代码移动</li><li>ctrl+shift+上下键:可以移动当前方法体,如果移动一行代码只能在代码体内移动</li><li>ctrl+shift+U:代码大小写</li><li>ctrl+shift+enter:补全代码(一行尾添加分号,如果是if等添加括号)</li></ol><h2 id="进入代码"><a href="#进入代码" class="headerlink" title="进入代码"></a><strong>进入代码</strong></h2><ol><li>ctrl+鼠标:进入代码</li><li>ctrl+B:进入代码</li><li>ctrl+shift+12:最大化窗口</li></ol><h2 id="替换查找"><a href="#替换查找" class="headerlink" title="替换查找"></a><strong>替换查找</strong></h2><ol><li>ctrl+r:替换</li><li>ctrl+F:查找</li><li>ctrl+shift+F:全局查找</li><li>ctrl+shift+R:全局替换</li><li>ctrl+shift+i:快捷查看方法实现的内容</li><li>ctrl+p:查看参数</li><li>ctrl+Q:查看文档描述</li><li>shift+F1:查看api文档</li><li>ctrl+F12:查看类的方法</li><li>ctrl+H:查看类的继承关系</li><li>查看变量的赋值情况:</li><li>ctrl+alt+H:查看方法在那里被调用了</li><li>ctrl+{}:可以定位方法体的括号</li><li>F3:查看选中的内容</li><li>shift+F3:反向查看内容</li><li>ctrl+alt+B:查询那些类实现了光标所在的接口</li><li>ctrl+U:查看父类</li><li>ctrl+E:最近编辑的文件列表</li><li>ctrl+alt+home:查看布局与对应的类</li><li>ctrl+alt+H:查看当前方法在那里进行调用</li></ol><h2 id="运行编译"><a href="#运行编译" class="headerlink" title="运行编译"></a><strong>运行编译</strong></h2><ol><li>ctrl+F9:构建</li><li>shift+F10:运行</li></ol><h2 id="工程目录操作"><a href="#工程目录操作" class="headerlink" title="工程目录操作"></a><strong>工程目录操作</strong></h2><ol><li>新建文件及工程:选中要创建目录使用alt+insert</li><li>ctrl+shift+a:输入show in explorer–&gt;打开相应目录</li><li>ctrl+alt+s:打开软件设置</li><li>ctrl+alt+shift+s:打开module设置</li><li>alt+1:当前目录区</li><li>alt+7:当前类的方法列表查看</li><li>ctrl+tab:切换目录及视图</li><li>alt+shift+c:查看工程最近更改的地方</li><li>ctrl+J:livetemp模板查看</li></ol><h2 id="代码快捷操作"><a href="#代码快捷操作" class="headerlink" title="代码快捷操作"></a><strong>代码快捷操作</strong></h2><ol><li>没有操作完成操作可以先写todo进行,就可以在todo的窗口进行查看</li><li>F11定义书签</li><li>shift+F11:查看书签</li><li>ctrl+J:快捷调出模板</li><li>alt+点击断点:禁用断点</li><li>调试状态下按下:alt查看变量能审查表达式的值</li></ol><h2 id="组合快捷键"><a href="#组合快捷键" class="headerlink" title="组合快捷键"></a><strong>组合快捷键</strong></h2><ol><li>F2:定位错误</li><li>alt+enter:修正错误</li><li>alt+鼠标:进入列编辑模式</li><li>ctrl+w:选中单词</li></ol><h2 id="编辑的位置"><a href="#编辑的位置" class="headerlink" title="编辑的位置"></a><strong>编辑的位置</strong></h2><ol><li>ctrl+alt+左右键:这个是定位到编辑的位置</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;python常用快捷键&quot;&gt;&lt;a href=&quot;#python常用快捷键&quot; class=&quot;headerlink&quot; title=&quot;python常用快捷键&quot;&gt;&lt;/a&gt;python常用快捷键&lt;/h1&gt;&lt;h2 id=&quot;最重要的快捷键&quot;&gt;&lt;a href=&quot;#最重要的快捷键&quot; c</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2022/10/29/python%E7%AC%94%E8%AE%B0/"/>
    <id>http://example.com/2022/10/29/python%E7%AC%94%E8%AE%B0/</id>
    <published>2022-10-29T11:31:34.856Z</published>
    <updated>2022-10-30T13:52:13.747Z</updated>
    
    <content type="html"><![CDATA[<h1 id="python笔记"><a href="#python笔记" class="headerlink" title="python笔记"></a>python笔记</h1><h2 id="Python中-1-、-1-、-1-、-n-1-、-0-、-…-0-、-…-1-的理解"><a href="#Python中-1-、-1-、-1-、-n-1-、-0-、-…-0-、-…-1-的理解" class="headerlink" title="Python中[-1]、[:-1]、[::-1]、[n::-1]、[:,:,0]、[…,0]、[…,::-1] 的理解"></a>Python中[-1]、[:-1]、[::-1]、[n::-1]、[:,:,0]、[…,0]、[…,::-1] 的理解</h2><p>下面的a &#x3D; [1,2,3,4,5]</p><ol><li>[-1]： 列表最后一项</li></ol><p><img src="https://img-blog.csdnimg.cn/20210422223934361.png" alt="在这里插入图片描述"></p><ol start="2"><li>[:-1]： 从第一项到最后一项<br>原型是[n : m]，前闭后开，索引从零开始，第一个索引指定可以取到，即n可以取到，后一个索引不可取到，即m不可取到。</li></ol><p><img src="https://img-blog.csdnimg.cn/20210422224326963.png" alt="在这里插入图片描述"></p><ol start="3"><li><p>[1:]：从第二项到最后一项</p><p>没有指定结束索引即默认为最后一位</p></li><li><p>[::-1]： 代表从全列表倒序取<br>原型是[n : m : k]，代表的是从那一段开始取，隔几个取一次。<br>其中，n代表的是取值开始的索引，因此该索引必将被取到，m代表的是取值结束的索引，和上面一样，该值不能被取到。<br>k代表的是间隔，间隔可正可负，正值代表正向顺序跳取，负值代表反向跳取。<br><strong>需要注意的是，当k为正的时候起始索引应该小于结束索引；当k为负的时候起始索引应该大于结束索引，因为在倒序来看，首先是索引值大的被取到，然后才是索引值小的。</strong></p></li></ol><p><img src="https://img-blog.csdnimg.cn/20210422231441255.png" alt="在这里插入图片描述"></p><ol start="4"><li>[n::-1]： 同上所述，从索引n开始倒序取值：</li></ol><p><img src="https://img-blog.csdnimg.cn/20210422234223108.png" alt="在这里插入图片描述"></p><ol start="5"><li>[:,:,0]： 因为有了逗号，所以这个方法就和前面的有所不同了。它是对多维数据的一种处理方式，代表了前两维全选，取其中的所有0号索引。<br>原型是[n:m, j:k, g:h]，当然维度可以更多，在图片处理中，一般用到的就是三维的。看a数组的模样就可以看出来，nm管最外层列表的取值，从第n个元素到第m个元素，前闭后开；jk管nm取中的元素的列表中的元素的选取，也是前闭后开，gh管jk取中元素的列表中的元素的选取，任意一对都可以是个整数用来直接取某个索引，这和前两个很像。<br>其实就是嵌套列表的取值方法。</li></ol><p><img src="https://img-blog.csdnimg.cn/20210422235954890.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM1MDMzNw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ol start="6"><li>[…,0]： 代表了取最里边一层的所有第0号元素，…代表了对:,:,:,的省略。注意只能进行一次省略，不能是[… , …]，全省略那不就是 a 吗。</li></ol><p><img src="https://img-blog.csdnimg.cn/20210423001300773.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM1MDMzNw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>同样可以再使用：来分割</p><p><img src="https://img-blog.csdnimg.cn/20210423001349261.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM1MDMzNw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>放在后面视为其中的所有值，这和[2:]很像，一个是不写代表全部，一个是用…代表全部。</p><p><img src="https://img-blog.csdnimg.cn/20210423001426330.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM1MDMzNw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ol start="7"><li>[…,::-1]： 是对最内层的列表进行逆序取值：</li></ol><p><img src="https://img-blog.csdnimg.cn/20210423002409752.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM1MDMzNw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>当然这个挑取的取法也可以放在其他位置，比如我们将他放在中间a[: , ::-1 , :]，他就会把所有的第二层进行颠倒：</p><p><img src="https://img-blog.csdnimg.cn/20210423002800109.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM1MDMzNw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="eval函数"><a href="#eval函数" class="headerlink" title="eval函数"></a>eval函数</h2><ul><li><p>eval是Python的一个<a href="https://so.csdn.net/so/search?q=%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0&spm=1001.2101.3001.7020">内置函数</a>，功能十分强大，这个函数的作用是，<strong>返回传入字符串的表达式的结果。就是说：将字符串当成有效的表达式 来求值 并 返回计算结果。</strong></p></li><li><p><strong>去掉参数最外侧引号并执行余下语句的函数</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">eval</span>(<span class="string">&quot;1&quot;</span>)</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="built_in">eval</span>(<span class="string">&quot;1+2&quot;</span>)</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="built_in">eval</span>(<span class="string">&#x27;&quot;1+2&quot;&#x27;</span>)</span><br><span class="line"><span class="string">&#x27;1+2&#x27;</span></span><br><span class="line"><span class="built_in">eval</span>(<span class="string">&#x27;print(&quot;Hello&quot;)&#x27;</span>)</span><br><span class="line">Hello</span><br></pre></td></tr></table></figure></li></ul><p>eval(expression[, globals[, locals]])<br>expression ： 表达式。<br>globals ： （可选参数)变量作用域，全局命名空间，如果被提供，则必须是一个字典对象。<br>locals ： (可选参数)变量作用域，局部命名空间，如果被提供，可以是任何映射对象。</p><h2 id="保留字"><a href="#保留字" class="headerlink" title="保留字"></a>保留字</h2><p><img src="D:/Cloud/source/_posts/python%E7%AC%94%E8%AE%B0.assets/image-20221029195716476.png" alt="image-20221029195716476"></p><h2 id="print函数格式化"><a href="#print函数格式化" class="headerlink" title="print函数格式化"></a>print函数格式化</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;转换后的温度是&#123;:.2f&#125;C&quot;</span>.<span class="built_in">format</span>(C))</span><br></pre></td></tr></table></figure><ul><li><p>{ }表示槽，后续变量填充到槽中</p></li><li><p>{:.2f}表示将变量C填充到这个位置时取小数点后2位</p></li></ul><h2 id="整数类型"><a href="#整数类型" class="headerlink" title="整数类型"></a>整数类型</h2><ul><li>可正可负，没有取值范围</li><li>pow(x,y)函数，计算x^y</li><li>4种进制表示形式<ul><li>十进制：1010，99，-217</li><li>二进制，以0b或0B开头：0b010，-0B101</li><li>八进制，以0o或0O开头：0o123，-0O456</li><li>十六进制，以0x或0X开头：0x9a，-0X89</li></ul></li></ul><h2 id="浮点数类型"><a href="#浮点数类型" class="headerlink" title="浮点数类型"></a>浮点数类型</h2><ul><li>与数字中实数的概念一致</li><li>带有小数点及小数的数字</li><li>浮点数取值范围和小数精度都存在限制，但常规计算可忽略</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;python笔记&quot;&gt;&lt;a href=&quot;#python笔记&quot; class=&quot;headerlink&quot; title=&quot;python笔记&quot;&gt;&lt;/a&gt;python笔记&lt;/h1&gt;&lt;h2 id=&quot;Python中-1-、-1-、-1-、-n-1-、-0-、-…-0-、-…-1-的</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2022/10/26/hello-world/"/>
    <id>http://example.com/2022/10/26/hello-world/</id>
    <published>2022-10-26T01:41:20.032Z</published>
    <updated>2022-10-26T01:41:20.032Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
